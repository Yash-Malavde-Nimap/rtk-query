import React, { useState, useEffect } from "react";
import { useAddUserMutation, useEditUserMutation } from "../services/usersAPI";
import "./Form.css";

const Form = ({ user }) => {
  const [addUser] = useAddUserMutation();
  const [editUser] = useEditUserMutation();

  const [formData, setFormData] = useState({
    email: "",
    password: "",
  });

  useEffect(() => {
    if (user && user.email) {
      setFormData({ ...user, password: atob(user.password) });
    }
  }, [user]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const payload = {
        createdAt: new Date().toISOString(),
        description: "This Data is generated by RTK Query",
        email: formData.email,
        password: btoa(formData.password),
      };

      if (formData.password.length >= 8) {
        await addUser(payload);
        setFormData({ email: "", password: "" });
        // window.location.reload();
      }
    } catch (err) {
      console.error(err);
    }
  };

  const handleEdit = async (e) => {
    e.preventDefault();

    try {
      const payload = {
        ...formData,
        updatedAt: new Date().toISOString(),
        password: btoa(formData.password),
      };

      if (formData.password.length >= 8) {
        await editUser({ payload, id: formData.id });
        setFormData({ email: "", password: "" });
        window.location.reload();
      }
    } catch (err) {
      console.error(err);
    }
  };

  return (
    <form className="form">
      <input
        name="email"
        type="text"
        value={formData.email}
        onChange={handleChange}
        className="form-input"
        placeholder="Enter Email"
        autoComplete="off"
      />
      <input
        name="password"
        type="text"
        value={formData.password}
        onChange={handleChange}
        className="form-input"
        placeholder="Enter Password"
        autoComplete="off"
      />
      {user && user.id ? (
        <button onClick={handleEdit} type="submit" className="form-button">
          Edit
        </button>
      ) : (
        <button onClick={handleSubmit} type="submit" className="form-button">
          Submit
        </button>
      )}
    </form>
  );
};

export default Form;
